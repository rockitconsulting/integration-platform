BROKER SCHEMA com.rockit.ip.healthmon
PATH com.rockit.ip.healthmon, com.rockit.ip.logging;
-- $MQSI Author=Eduard Gohr, rockIT.consulting GmbH MQSI$

CREATE COMPUTE MODULE DBMon_EvalDBConnection
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CREATE LASTCHILD OF  Environment.Variables.Config.XMLNSC.Connectors.Connector[<] NAME 'db';
		DECLARE refConnector REFERENCE TO InputRoot.XMLNSC.Connectors;
		DECLARE refEnv REFERENCE TO Environment.Variables.Config.XMLNSC.Connectors.Connector[<].db;
		DECLARE resultRow ROW;
		DECLARE Id CHARACTER;
		DECLARE DBSchema CHARACTER;
		DECLARE DBTable CHARACTER;
		DECLARE ODBCDatasource CHARACTER;

		WHILE LASTMOVE(refConnector) DO
			DECLARE statusDetailed CHARACTER '';
			DECLARE status CHARACTER 'OK';
			BEGIN
				DECLARE CONTINUE HANDLER FOR SQLSTATE LIKE'%'
				BEGIN
					SET Environment.ReportFlag = 'false';
					SET status = 'NOK';
					SET statusDetailed = COALESCE(NULLIF(TRIM(SQLERRORTEXT),''),'No error message text');
				END;

				DECLARE refProperties REFERENCE TO refConnector.db.property[1];

				WHILE LASTMOVE(refProperties) DO
					IF ( FIELDVALUE(refProperties.(XMLNSC.Attribute)name) = 'Id' ) THEN
						SET Id = FIELDVALUE(refProperties.(XMLNSC.Attribute)value);
					END IF;

					IF ( FIELDVALUE(refProperties.(XMLNSC.Attribute)name) = 'DBSchema' ) THEN
						SET DBSchema = FIELDVALUE(refProperties.(XMLNSC.Attribute)value);
					END IF;

					IF ( FIELDVALUE(refProperties.(XMLNSC.Attribute)name) = 'DBTable' ) THEN
						SET DBTable = FIELDVALUE(refProperties.(XMLNSC.Attribute)value);
					END IF;

					IF ( FIELDVALUE(refProperties.(XMLNSC.Attribute)name) = 'ODBCDatasource' ) THEN
						SET ODBCDatasource = FIELDVALUE(refProperties.(XMLNSC.Attribute)value);
					END IF;
					MOVE refProperties NEXTSIBLING REPEAT NAME;
				END WHILE;

				SET resultRow.result[] = PASSTHRU('SELECT 1 FROM ' || DBSchema || '.' || DBTable || ' WHERE 1=1' TO Database.{ODBCDatasource});
				CALL setConnectorStatus('db',Id, status, statusDetailed, refEnv);
				MOVE refConnector NEXTSIBLING REPEAT NAME;
			END;
		END WHILE;

		RETURN TRUE;
	END;

END MODULE;